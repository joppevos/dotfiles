" able to paste from clipboard
" set clipboard+=unnamed
" :actionlist gives all the actions

syntax on
set rnu " relational line numbers
set history=500
set hlsearch
set ideajoin
set scrolloff=8       " Show next 8 lines while scrolling.
set visualbell " stop the ringing bell
set noscrollbind
set nocursorbind
set ideajoin "https://github.com/JetBrains/ideavim/blob/master/doc/ideajoin-examples.md
set ruler " show the line number
set formatoptions+=j              " Delete comment charalter when joining commented lines
set sc                            " show commands as you type them
set lazyredraw                    " make vim a little speedier

" ---------------------------------------------------------------------------------------------------------------------
" Search settings
" ---------------------------------------------------------------------------------------------------------------------
set ignorecase                    " Ignore case by default
set smartcase                     " Make search case sensitive only if it contains uppercase letters
set wrapscan                      " Search again from top when reached the bottom
" set hlsearch
set nohlsearch                    " Don't highlight after search
set incsearch                     " incremental searching

""""""""""
set shiftwidth=4
set tabstop=4
set smarttab

set autoindent "Auto indent
set smartindent "Smart indent
set wrap "Wrap lines
""""""""""""""""""""

"-------------------------------------------------------------------------------
" IdeaVim Plugin Emulations
"-------------------------------------------------------------------------------
set NERDTree
set highlightedyank
set commentary " able to comment out with gc
set surround " ys, cs, ds, S



"-------------------------------------------------------------------------------
" Mappings
"-------------------------------------------------------------------------------
let mapleader=" "

" window split navigation like VIM {{{
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-h> <C-w>h

" maximize panel like tmux
map <C->z :action No

noremap Y y$

" jump methods
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

" Yank to clipboard
map <leader>y "+y
map <leader>y "+y

" Greatest remap EVER!!
" Let me explain, this remap while in visiual mode
" will delete what is currently highlighted and replace it
" with what is in the register BUT it will YANK (delete) it
" to a VOID register. Meaning I still have what I originally had
" when I pasted. I don't loose the previous thing I YANKED!
vnoremap <C-p> "_dP

" fzf like

nnoremap <leader>ff :action GotoFile<CR>
noremap <Leader>fw :action FindInPath<CR>
nnoremap fa :action GotoAction<CR>
nnoremap <leader>fr     :action RecentFiles<CR>

nmap gD :action GotoImplementation<CR>
map <leader>gr     :action Refactorings.QuickListPopupAction<CR>
map <leader>p     :NERDTree<CR>
map <leader>o <Action>(SelectInProjectView)<cr>
map <leader>t     :action ActivateTerminalToolWindow<CR>
map <leader>q     :action CloseActiveTab<CR>
map <leader>gf     :action ReformatCode<CR>
map <C-r>     :action Rerun<CR>

"
" close all but this
noremap <leader>gx :action CloseAllEditorsButActive<CR>
" hide all
noremap <leader>h <ESC>:action HideAllWindows<CR>

noremap <leader>l <ESC>:action HighlightUsagesInFile<CR>



" recent projects
nmap <Leader><Leader>m :action ManageRecentProjects<CR>

" The default C-o and C-i behaviours have certain inconsistencies with
" Vim which I can't quite pinpoint
" I'm using the default IntelliJ behaviours instead.
map <C-o> <Action>(Back)
map <C-i> <Action>(Forward)
map g; <Action>(JumpToLastChange)
map g, <Action>(JumpToNextChange)

" Folding like vim
nnoremap zC         :action CollapseRegionRecursively<CR>
nnoremap zO         :action ExpandRegionRecursively<CR>
map <leader>zc      :action CollapseAllRegions<CR>
map <leader>zo      :action ExpandAllRegions<CR>

" To set editor >code style -> increase hard wraps to > 200"
" make sure to turn on line numbers in settings before
map <C-z> <Action>(ToggleDistractionFreeMode)

" Useful Git actions
nmap <leader>gb :action Git.Branches<cr>
nmap <leader>gd :action GitShowDiffWithBranchAction<cr>
nmap <leader>gp :action Git.Pull<cr>
nmap <leader>gm :action Git.Menu<cr>
map <leader>gpr :action Github.Create.Pull.Request<CR>
nmap <leader>gc :action Git.CompareWithBranch<cr>


nmap <leader>vl :action Vcs.Show.Log<cr>
nmap <leader>vd :action Compare.LastVersion<cr>
nmap <leader>vo :action Github.Open.In.Browser<cr>
map <leader>vg :action Github.Create.Gist<CR>
map <leader>vh :action Vcs.History<cr>                                       

" intention
noremap gi <ESC>:action ShowIntentionActions<CR>

map <leader>cd :action copilot.disableCopilot<cr>
C:action RestoreDefaultLayout

nmap ,ya :action CopyAbsolutePath<cr>


" 本行皆为debug所用
" resume - z
noremap <leader>z <ESC>:action Resume<CR>
" step over
noremap <leader>x <ESC>:action StepOver<CR>
" step into
noremap <leader>c <ESC>:action SmartStepInto<CR>

noremap <leader>v <ESC>:action EvaluateExpression<CR>
" breakpoints
noremap <leader>b <ESC>:action ViewBreakpoints<CR>
" 因为属于breakpoint范畴的功能, 所以就选择了b和m的隔壁
noremap <leader>n <ESC>:action ToggleLineBreakpoint<CR>
" mute breakpoints
noremap <leader>m <ESC>:action XDebugger.MuteBreakpoints<CR>

nmap <leader>dl :action RestoreDefaultLayout<CR>

" How to commit and push without mouse
" first commit
" command + k
" now push
" option + p
" option + p
